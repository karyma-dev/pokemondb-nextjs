{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokemon/[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\n\nvar Pokemon = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _useState, loading, setLoading, _useState2, pokemon, setPokemon, _useState3, errorMsg, setErrorMsg, router, name, a;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _useState = useState(true), loading = _useState[0], setLoading = _useState[1];\n            _useState2 = useState(), pokemon = _useState2[0], setPokemon = _useState2[1];\n            _useState3 = useState(''), errorMsg = _useState3[0], setErrorMsg = _useState3[1];\n            router = useRouter();\n            name = router.query.id;\n            _context.next = 8;\n            return fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(name));\n\n          case 8:\n            a = _context.sent;\n\n            if (!loading) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", __jsx(\"h1\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 16\n              }\n            }, \"Loading\"));\n\n          case 13:\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 13\n              }\n            }, errorMsg, __jsx(\"h1\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }\n            }, \"Pokemon\")));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"/pt5TokYsMyuPRf7lkGA3Cci00Q=\", false, function () {\n    return [useRouter];\n  }));\n\n  return function Pokemon() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokemon/[id].tsx"],"names":["React","useState","useRouter","Pokemon","loading","setLoading","pokemon","setPokemon","errorMsg","setErrorMsg","router","name","query","id","fetch","a"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAGA,IAAMC,OAAO;AAAA;;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,wBACkBF,QAAQ,CAAC,IAAD,CAD1B,EACLG,OADK,iBACIC,UADJ;AAAA,yBAEkBJ,QAAQ,EAF1B,EAELK,OAFK,kBAEIC,UAFJ;AAAA,yBAGoBN,QAAQ,CAAC,EAAD,CAH5B,EAGLO,QAHK,kBAGKC,WAHL;AAKNC,YAAAA,MALM,GAKGR,SAAS,EALZ;AAMNS,YAAAA,IANM,GAMCD,MAAM,CAACE,KAAP,CAAaC,EANd;AAAA;AAAA,mBAQIC,KAAK,6CAAsCH,IAAtC,EART;;AAAA;AAQNI,YAAAA,CARM;;AAAA,iBAUTX,OAVS;AAAA;AAAA;AAAA;;AAAA,6CAWD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXC;;AAAA;AAAA,6CAcJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMI,QADN,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,CAdI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YAKMN,SALN;AAAA;;AAAA,kBAAPC,OAAO;AAAA;AAAA;AAAA,GAAb;;KAAMA,O;AAsBN,eAAeA,OAAf","sourcesContent":["import React,{ useState } from 'react'\nimport { useRouter } from 'next/router'\nimport axios from 'axios'\n\nconst Pokemon = async () => {\n    const [loading, setLoading] = useState(true)\n    const [pokemon, setPokemon] = useState()\n    const [errorMsg, setErrorMsg] = useState('')\n\n    const router = useRouter()\n    const name = router.query.id\n\n    const a = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\n\n    if(loading){\n        return <h1>Loading</h1>\n    } else {\n        return (\n            <div>\n                { errorMsg }\n                <h1>Pokemon</h1>\n            </div>\n        )\n    }\n}\n\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}