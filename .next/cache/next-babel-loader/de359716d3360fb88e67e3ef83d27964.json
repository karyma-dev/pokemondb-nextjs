{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/components/Pokemon/Evolution.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nvar Evolution = function Evolution(_ref) {\n  _s();\n\n  var evolution_chain = _ref.evolution_chain,\n      pokemon_name = _ref.pokemon_name;\n\n  var _useState = useState(null),\n      evolution = _useState[0],\n      setEvolution = _useState[1];\n\n  useEffect(function () {\n    axios.get(evolution_chain.url).then(function (res) {\n      console.log(res.data);\n      setEvolution(res.data);\n    });\n  }, []);\n\n  if (evolution) {\n    var evoChain = [];\n    var evoData = evolution.chain;\n    var description = '';\n\n    if (evoData.evolves_to.length > 1) {\n      // Multiple Evolution Chains\n      evoData.evolves_to.forEach(function (evoData) {\n        var evoDetails = evoData.evolution_details[0];\n        evoChain = [].concat(_toConsumableArray(evoChain), [{\n          \"species_name\": evoData.species.name,\n          \"min_level\": evoDetails ? evoDetails.min_level : null,\n          \"min_happiness\": evoDetails ? evoDetails.min_happiness : null,\n          \"trigger_name\": evoDetails ? evoDetails.trigger.name : null,\n          \"item\": evoDetails ? evoDetails.item : null\n        }]);\n      });\n\n      for (var i = 0; i < evoChain.length; i++) {\n        var condition = '';\n\n        switch (evoChain[i].trigger_name) {\n          case 'use-item':\n            condition = \"with \".concat(evoChain[i].item.name);\n        }\n\n        description += \"<span>\".concat(evoData.species.name, \"</span> evolves to \").concat(evoChain[i].species_name, \" \").concat(condition, \". \");\n      }\n    } else {\n      // Single Evolution Chain\n      do {\n        var evoDetails = evoData['evolution_details'][0];\n        evoChain.push({\n          \"species_name\": evoData.species.name,\n          \"min_level\": !evoDetails ? null : evoDetails.min_level,\n          \"min_happiness\": !evoDetails ? null : evoDetails.min_happiness,\n          \"trigger_name\": !evoDetails ? null : evoDetails.trigger.name,\n          \"item\": !evoDetails ? null : evoDetails.item\n        });\n        evoData = evoData.evolves_to[0];\n      } while (!!evoData && evoData.hasOwnProperty('evolves_to'));\n\n      for (var _i = 1; _i < evoChain.length; _i++) {\n        var _condition = '';\n\n        switch (evoChain[_i].trigger_name) {\n          case 'level-up':\n            _condition = \"at level \".concat(evoChain[_i].min_level);\n        }\n\n        description += \"\".concat(evoChain[_i - 1].species_name, \" evolves to \").concat(evoChain[_i].species_name, \" \").concat(_condition, \". \");\n      }\n    }\n\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, description);\n  } else {\n    return null;\n  }\n};\n\n_s(Evolution, \"02G2/aEGdK8RGngcwPn1qxD0i9o=\");\n\n_c = Evolution;\nexport default Evolution;\n\nvar _c;\n\n$RefreshReg$(_c, \"Evolution\");","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/components/Pokemon/Evolution.tsx"],"names":["React","useEffect","useState","axios","Evolution","evolution_chain","pokemon_name","evolution","setEvolution","get","url","then","res","console","log","data","evoChain","evoData","chain","description","evolves_to","length","forEach","evoDetails","evolution_details","species","name","min_level","min_happiness","trigger","item","i","condition","trigger_name","species_name","push","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst Evolution = ({evolution_chain, pokemon_name}) => {\n    const [evolution, setEvolution] = useState(null)\n\n    useEffect(() => {\n        axios.get(evolution_chain.url)\n            .then(res => {\n                console.log(res.data)\n                setEvolution(res.data)\n            })\n    }, [])\n\n    if(evolution) {\n\n        let evoChain = [];\n        let evoData = evolution.chain;\n        let description = ''\n\n        if(evoData.evolves_to.length > 1) {\n\n            // Multiple Evolution Chains\n\n            evoData.evolves_to.forEach((evoData) => {\n                let evoDetails = evoData.evolution_details[0]\n                evoChain = [...evoChain, {\n                    \"species_name\": evoData.species.name,\n                    \"min_level\": evoDetails ? evoDetails.min_level : null,\n                    \"min_happiness\": evoDetails ? evoDetails.min_happiness : null,\n                    \"trigger_name\": evoDetails ? evoDetails.trigger.name : null,\n                    \"item\": evoDetails ? evoDetails.item : null\n                }]\n            })\n\n            for(let i = 0; i < evoChain.length; i++){\n                let condition = ''\n\n                switch(evoChain[i].trigger_name){\n                    case 'use-item':\n                        condition = `with ${evoChain[i].item.name}`\n                }\n\n                description += `<span>${evoData.species.name}</span> evolves to ${evoChain[i].species_name} ${condition}. `\n            }\n\n        } else {\n\n            // Single Evolution Chain\n\n            do {\n                let evoDetails = evoData['evolution_details'][0]\n    \n                evoChain.push({\n                    \"species_name\": evoData.species.name,\n                    \"min_level\": !evoDetails ? null : evoDetails.min_level,\n                    \"min_happiness\": !evoDetails ? null : evoDetails.min_happiness,\n                    \"trigger_name\": !evoDetails ? null : evoDetails.trigger.name,\n                    \"item\": !evoDetails ? null : evoDetails.item\n                    })\n    \n                evoData = evoData.evolves_to[0]\n                \n            } while (!!evoData && evoData.hasOwnProperty('evolves_to'))\n\n            for(let i = 1; i < evoChain.length; i++){\n                let condition = ''\n\n                switch(evoChain[i].trigger_name){\n                    case 'level-up':\n                        condition = `at level ${evoChain[i].min_level}`\n                }\n\n                description += `${evoChain[i - 1].species_name} evolves to ${evoChain[i].species_name} ${condition}. `\n            }\n        }\n        \n        return (\n            <div>\n                {description}\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Evolution"]},"metadata":{},"sourceType":"module"}