{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Suggestions from './Suggestions';\n\nvar SuggestionBox = function SuggestionBox(_ref) {\n  var text = _ref.text;\n\n  var renderSuggestions = function renderSuggestions() {\n    var filteredSuggestions = Suggestions.filter(function (data) {\n      if (data.includes(text)) {\n        return true;\n      }\n    });\n    return filteredSuggestions.map(function (data) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 50\n        }\n      }, data);\n    });\n  };\n\n  var autoComplete = text ? renderSuggestions() : null;\n  return __jsx(React.Fragment, null, renderSuggestions());\n};\n\n_c = SuggestionBox;\nexport default SuggestionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionBox\");","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx"],"names":["Suggestions","SuggestionBox","text","renderSuggestions","filteredSuggestions","filter","data","includes","map","autoComplete"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAC9B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAMC,mBAAmB,GAAGJ,WAAW,CAACK,MAAZ,CAAmB,UAACC,IAAD,EAAU;AACrD,UAAGA,IAAI,CAACC,QAAL,CAAcL,IAAd,CAAH,EAAuB;AACnB,eAAO,IAAP;AACH;AACJ,KAJ2B,CAA5B;AAMA,WAAOE,mBAAmB,CAACI,GAApB,CAAwB,UAACF,IAAD;AAAA,aAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAL,CAAV;AAAA,KAAxB,CAAP;AACH,GARD;;AAUA,MAAMG,YAAY,GAAGP,IAAI,GAAGC,iBAAiB,EAApB,GAAyB,IAAlD;AAGA,SACI,4BACKA,iBAAiB,EADtB,CADJ;AAKH,CAnBD;;KAAMF,a;AAqBN,eAAeA,aAAf","sourcesContent":["import Suggestions from './Suggestions'\n\nconst SuggestionBox = ({text}) => {\n    const renderSuggestions = () => {\n        const filteredSuggestions = Suggestions.filter((data) => {\n            if(data.includes(text)){\n                return true\n            }\n        })\n\n        return filteredSuggestions.map((data) => <li>{data}</li>)\n    }\n\n    const autoComplete = text ? renderSuggestions() : null\n\n\n    return (\n        <>\n            {renderSuggestions()}\n        </>\n    )\n}\n\nexport default SuggestionBox"]},"metadata":{},"sourceType":"module"}