{"ast":null,"code":"var _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Pokemons from '../../assets/data/Pokemons';\n\nconst SuggestionBox = ({\n  text,\n  autoComplete\n}) => {\n  const renderSuggestions = () => {\n    const suggestions = [];\n    Pokemons.forEach(pokemon => {\n      if (pokemon.includes(text.toLowerCase())) {\n        [...suggestions, pokemon];\n      }\n    }); // return filteredSuggestions.map((data, i) => <li key={i} onClick={() => autoComplete(data)}>{data}</li>)\n  }; // const render = text ? renderSuggestions() : null\n\n\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default SuggestionBox;","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx"],"names":["Pokemons","SuggestionBox","text","autoComplete","renderSuggestions","suggestions","forEach","pokemon","includes","toLowerCase"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,4BAArB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA0B;AAC5C,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,WAAW,GAAG,EAApB;AAEAL,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,OAAO,IAAI;AACxB,UAAGA,OAAO,CAACC,QAAR,CAAiBN,IAAI,CAACO,WAAL,EAAjB,CAAH,EAAwC;AACpC,SAAC,GAAGJ,WAAJ,EAAiBE,OAAjB;AACH;AACJ,KAJD,EAH4B,CAW5B;AACH,GAZD,CAD4C,CAe5C;;;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAvBD;;AAyBA,eAAeN,aAAf","sourcesContent":["import Pokemons from '../../assets/data/Pokemons'\nimport Berries from '../../assets/data/Berries'\n\nconst SuggestionBox = ({text, autoComplete}) => {\n    const renderSuggestions = () => {\n        const suggestions = []\n\n        Pokemons.forEach(pokemon => {\n            if(pokemon.includes(text.toLowerCase())){\n                [...suggestions, pokemon]\n            }\n        })\n\n\n\n        // return filteredSuggestions.map((data, i) => <li key={i} onClick={() => autoComplete(data)}>{data}</li>)\n    }\n\n    // const render = text ? renderSuggestions() : null\n\n\n    return (\n        <ul>\n            {/* {render} */}\n        </ul>\n    )\n}\n\nexport default SuggestionBox"]},"metadata":{},"sourceType":"module"}