{"ast":null,"code":"var _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokedex/[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Pokemon from '../../components/Pokemon';\n\nconst Pokedex = () => {\n  const {\n    0: pokemon,\n    1: setPokemon\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const router = useRouter();\n  useEffect(() => {\n    const name = router.query.id;\n\n    if (name) {\n      let pokemonData;\n      axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`).then(res => {\n        pokemonData = res.data;\n        console.log(pokemonData);\n        return axios.get(res.data.species.url);\n      }).then(res => {\n        pokemonData = _objectSpread(_objectSpread({}, pokemonData), {}, {\n          species: res.data\n        });\n        setPokemon(res.data);\n        setLoading(false);\n      }); // .catch(() => {\n      //     setError('Pokemon Not Found')\n      //     setLoading(false)\n      // })\n    }\n  }, [router]);\n  console.log(pokemon);\n\n  if (loading) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  } else {\n    return __jsx(Pokemon, {\n      pokemon: pokemon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n  }\n};\n\nexport default Pokedex;","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokedex/[id].tsx"],"names":["React","useEffect","useState","useRouter","axios","Pokemon","Pokedex","pokemon","setPokemon","loading","setLoading","error","setError","router","name","query","id","pokemonData","get","then","res","data","console","log","species","url"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMW,MAAM,GAAGV,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,IAAI,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA1B;;AACA,QAAGF,IAAH,EAAQ;AACJ,UAAIG,WAAJ;AAEAb,MAAAA,KAAK,CAACc,GAAN,CAAW,qCAAoCJ,IAAK,EAApD,EACKK,IADL,CACUC,GAAG,IAAI;AACTH,QAAAA,WAAW,GAAGG,GAAG,CAACC,IAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,eAAOb,KAAK,CAACc,GAAN,CAAUE,GAAG,CAACC,IAAJ,CAASG,OAAT,CAAiBC,GAA3B,CAAP;AACH,OALL,EAMKN,IANL,CAMUC,GAAG,IAAI;AACTH,QAAAA,WAAW,mCAAOA,WAAP;AAAoBO,UAAAA,OAAO,EAAEJ,GAAG,CAACC;AAAjC,UAAX;AAEAb,QAAAA,UAAU,CAACY,GAAG,CAACC,IAAL,CAAV;AACAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAXL,EAHI,CAeA;AACA;AACA;AACA;AACP;AACJ,GAtBQ,EAsBN,CAACG,MAAD,CAtBM,CAAT;AAwBAS,EAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;;AAEA,MAAGE,OAAH,EAAY;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,GAFD,MAEO;AACH,WAAO,MAAC,OAAD;AAAS,MAAA,OAAO,EAAEF,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport axios from 'axios'\n\nimport Pokemon from '../../components/Pokemon'\n\nconst Pokedex = () => {\n    const [pokemon, setPokemon] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const router = useRouter()\n\n    useEffect(() => {\n        const name = router.query.id\n        if(name){\n            let pokemonData\n\n            axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\n                .then(res => {\n                    pokemonData = res.data\n                    console.log(pokemonData)\n                    return axios.get(res.data.species.url)\n                })\n                .then(res => {\n                    pokemonData = {...pokemonData, species: res.data }\n\n                    setPokemon(res.data)\n                    setLoading(false)\n                })\n                // .catch(() => {\n                //     setError('Pokemon Not Found')\n                //     setLoading(false)\n                // })\n        }\n    }, [router])\n\n    console.log(pokemon)\n\n    if(loading) {\n        return <h1>Loading...</h1>\n    } else {\n        return <Pokemon pokemon={pokemon}/>\n    }\n}\n\nexport default Pokedex"]},"metadata":{},"sourceType":"module"}