{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Pokemons from '../../assets/data/Pokemons';\nimport Berries from '../../assets/data/Berries';\n\nvar SuggestionBox = function SuggestionBox(_ref) {\n  var text = _ref.text,\n      autoComplete = _ref.autoComplete;\n\n  var renderSuggestions = function renderSuggestions() {\n    var suggestions = [];\n    Pokemons.forEach(function (pokemon) {\n      console.log(pokemon);\n\n      if (pokemon.includes(text.toLowerCase())) {\n        [].concat(suggestions, [{\n          pokemon: 'pokedex'\n        }]);\n      }\n    });\n    Berries.forEach(function (berry) {\n      if (berry.includes(text.toLowerCase())) {\n        [].concat(suggestions, [{\n          berry: 'berries'\n        }]);\n      }\n    });\n    console.log(suggestions);\n    return null; // return filteredSuggestions.map((data, i) => <li key={i} onClick={() => autoComplete(data)}>{data}</li>)\n  }; // const render = text ? renderSuggestions() : null\n\n\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, renderSuggestions());\n};\n\n_c = SuggestionBox;\nexport default SuggestionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionBox\");","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx"],"names":["Pokemons","Berries","SuggestionBox","text","autoComplete","renderSuggestions","suggestions","forEach","pokemon","console","log","includes","toLowerCase","berry"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA0B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;;AAC5C,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAMC,WAAW,GAAG,EAApB;AAEAN,IAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAAC,OAAO,EAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAGA,OAAO,CAACG,QAAR,CAAiBR,IAAI,CAACS,WAAL,EAAjB,CAAH,EAAwC;AACpC,kBAAIN,WAAJ,GAAiB;AAAEE,UAAAA,OAAO,EAAE;AAAX,SAAjB;AACH;AACJ,KALD;AAOAP,IAAAA,OAAO,CAACM,OAAR,CAAgB,UAAAM,KAAK,EAAI;AACrB,UAAGA,KAAK,CAACF,QAAN,CAAeR,IAAI,CAACS,WAAL,EAAf,CAAH,EAAsC;AAClC,kBAAIN,WAAJ,GAAiB;AAAEO,UAAAA,KAAK,EAAE;AAAT,SAAjB;AACH;AACJ,KAJD;AAMAJ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,WAAO,IAAP,CAjB4B,CAkB5B;AACH,GAnBD,CAD4C,CAqB5C;;;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,iBAAiB,EADtB,CADJ;AAKH,CA7BD;;KAAMH,a;AA+BN,eAAeA,aAAf","sourcesContent":["import Pokemons from '../../assets/data/Pokemons'\nimport Berries from '../../assets/data/Berries'\n\nconst SuggestionBox = ({text, autoComplete}) => {\n    const renderSuggestions = () => {\n        const suggestions = []\n\n        Pokemons.forEach(pokemon => {\n            console.log(pokemon)\n            if(pokemon.includes(text.toLowerCase())){\n                [...suggestions, { pokemon: 'pokedex' }]\n            }\n        })\n\n        Berries.forEach(berry => {\n            if(berry.includes(text.toLowerCase())){\n                [...suggestions, { berry: 'berries' }]\n            }\n        })\n\n        console.log(suggestions)\n        return null\n        // return filteredSuggestions.map((data, i) => <li key={i} onClick={() => autoComplete(data)}>{data}</li>)\n    }\n    // const render = text ? renderSuggestions() : null\n\n\n    return (\n        <ul>\n            {renderSuggestions()}\n        </ul>\n    )\n}\n\nexport default SuggestionBox"]},"metadata":{},"sourceType":"module"}