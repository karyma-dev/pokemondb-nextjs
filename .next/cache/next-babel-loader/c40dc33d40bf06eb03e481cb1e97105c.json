{"ast":null,"code":"var _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokemon/[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\n\nconst Pokemon = () => {\n  const {\n    0: pokemon,\n    1: setPokemon\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const router = useRouter();\n  useEffect(() => {\n    const name = router.query.id;\n\n    if (name) {\n      axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`).then(res => {\n        setPokemon(res.data);\n        setLoading(false);\n      }).catch(() => {\n        setError('Pokemon Not Found');\n        setLoading(false);\n      });\n    }\n  }, [router]);\n\n  if (loading) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  } else {\n    __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, pokemon.name);\n  }\n};\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokemon/[id].tsx"],"names":["React","useEffect","useState","useRouter","axios","Pokemon","pokemon","setPokemon","loading","setLoading","error","setError","router","name","query","id","get","then","res","data","catch"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,MAAM,GAAGT,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,IAAI,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA1B;;AACA,QAAGF,IAAH,EAAQ;AACJT,MAAAA,KAAK,CAACY,GAAN,CAAW,qCAAoCH,IAAK,EAApD,EACKI,IADL,CACUC,GAAG,IAAI;AACTX,QAAAA,UAAU,CAACW,GAAG,CAACC,IAAL,CAAV;AACAV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJL,EAKKW,KALL,CAKW,MAAM;AACTT,QAAAA,QAAQ,CAAC,mBAAD,CAAR;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OARL;AASH;AACJ,GAbQ,EAaN,CAACG,MAAD,CAbM,CAAT;;AAeA,MAAGJ,OAAH,EAAY;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,GAFD,MAEO;AACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,OAAO,CAACO,IAAd;AACH;AACJ,CA3BD;;AA6BA,eAAeR,OAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport axios from 'axios'\n\nconst Pokemon = () => {\n    const [pokemon, setPokemon] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('')\n\n    const router = useRouter()\n\n    useEffect(() => {\n        const name = router.query.id\n        if(name){\n            axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\n                .then(res => {\n                    setPokemon(res.data)\n                    setLoading(false)\n                })\n                .catch(() => {\n                    setError('Pokemon Not Found')\n                    setLoading(false)\n                })\n        }\n    }, [router])\n\n    if(loading) {\n        return <h1>Loading...</h1>\n    } else {\n        <h1>{ pokemon.name }</h1>\n    }\n}\n\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}