{"ast":null,"code":"var _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Suggestions from './Suggestions';\n\nconst SuggestionBox = ({\n  text,\n  autoComplete\n}) => {\n  const renderSuggestions = () => {\n    const filteredSuggestions = Suggestions.filter(data => {\n      if (data.includes(text)) {\n        return true;\n      }\n    });\n    return filteredSuggestions.map(data => __jsx(\"li\", {\n      onClick: data => autoComplete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 50\n      }\n    }, data));\n  };\n\n  const render = text ? renderSuggestions() : null;\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, render);\n};\n\nexport default SuggestionBox;","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/components/SearchBar/SuggestionBox.tsx"],"names":["Suggestions","SuggestionBox","text","autoComplete","renderSuggestions","filteredSuggestions","filter","data","includes","map","render"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA0B;AAC5C,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,mBAAmB,GAAGL,WAAW,CAACM,MAAZ,CAAoBC,IAAD,IAAU;AACrD,UAAGA,IAAI,CAACC,QAAL,CAAcN,IAAd,CAAH,EAAuB;AACnB,eAAO,IAAP;AACH;AACJ,KAJ2B,CAA5B;AAMA,WAAOG,mBAAmB,CAACI,GAApB,CAAyBF,IAAD,IAAU;AAAI,MAAA,OAAO,EAAGA,IAAD,IAAUJ,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCI,IAAxC,CAAlC,CAAP;AACH,GARD;;AAUA,QAAMG,MAAM,GAAGR,IAAI,GAAGE,iBAAiB,EAApB,GAAyB,IAA5C;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,MADL,CADJ;AAKH,CAnBD;;AAqBA,eAAeT,aAAf","sourcesContent":["import Suggestions from './Suggestions'\n\nconst SuggestionBox = ({text, autoComplete}) => {\n    const renderSuggestions = () => {\n        const filteredSuggestions = Suggestions.filter((data) => {\n            if(data.includes(text)){\n                return true\n            }\n        })\n\n        return filteredSuggestions.map((data) => <li onClick={(data) => autoComplete()}>{data}</li>)\n    }\n\n    const render = text ? renderSuggestions() : null\n\n\n    return (\n        <ul>\n            {render}\n        </ul>\n    )\n}\n\nexport default SuggestionBox"]},"metadata":{},"sourceType":"module"}