{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/components/Pokemon/Moves/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Generations from './Generations';\n\nvar Moves = function Moves(_ref) {\n  _s();\n\n  var MoveList = _ref.MoveList;\n\n  var _useState = useState('sun-moon'),\n      generation = _useState[0],\n      setGeneration = _useState[1];\n\n  var generations = props.moves.reduce(function (total, currentValue) {\n    if (typeof total !== 'object') {\n      total = {};\n    }\n\n    currentValue.version_group_details.forEach(function (move) {\n      var key = move.version_group.name;\n      var newObj = {\n        move: currentValue.move.name,\n        level: move.level_learned_at,\n        method: move.move_learn_method.name,\n        mId: move.move_learn_method.url.match(/\\/[0-9]+\\//)[0],\n        vId: move.version_group.url.match(/\\/[0-9]+\\//)[0]\n      };\n\n      if (typeof total[key] === 'undefined') {\n        total[key] = [];\n        total[key].push(newObj);\n      } else {\n        total[key].push(newObj);\n      }\n    });\n    return total;\n  });\n  console.log(generations['sun-moon']);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Generations, {\n    generations: generations,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(MoveList, {\n    moveList: generations[generation],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Moves, \"Tp681TVZnN/P8lQhleSCX8mcKgs=\");\n\n_c = Moves;\nexport default Moves;\n\nvar _c;\n\n$RefreshReg$(_c, \"Moves\");","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/components/Pokemon/Moves/index.tsx"],"names":["React","useState","Generations","Moves","MoveList","generation","setGeneration","generations","props","moves","reduce","total","currentValue","version_group_details","forEach","move","key","version_group","name","newObj","level","level_learned_at","method","move_learn_method","mId","url","match","vId","push","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACUH,QAAQ,CAAC,UAAD,CADlB;AAAA,MACpBI,UADoB;AAAA,MACRC,aADQ;;AAG5B,MAAMC,WAAW,GAAGC,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmB,UAACC,KAAD,EAAQC,YAAR,EAAyB;AAC5D,QAAG,OAAOD,KAAP,KAAiB,QAApB,EAA6B;AACzBA,MAAAA,KAAK,GAAG,EAAR;AACH;;AAEDC,IAAAA,YAAY,CAACC,qBAAb,CAAmCC,OAAnC,CAA2C,UAAAC,IAAI,EAAI;AAC/C,UAAMC,GAAG,GAAGD,IAAI,CAACE,aAAL,CAAmBC,IAA/B;AACA,UAAMC,MAAM,GAAG;AACXJ,QAAAA,IAAI,EAAEH,YAAY,CAACG,IAAb,CAAkBG,IADb;AAEXE,QAAAA,KAAK,EAAEL,IAAI,CAACM,gBAFD;AAGXC,QAAAA,MAAM,EAAEP,IAAI,CAACQ,iBAAL,CAAuBL,IAHpB;AAIXM,QAAAA,GAAG,EAAET,IAAI,CAACQ,iBAAL,CAAuBE,GAAvB,CAA2BC,KAA3B,CAAiC,YAAjC,EAA+C,CAA/C,CAJM;AAKXC,QAAAA,GAAG,EAAEZ,IAAI,CAACE,aAAL,CAAmBQ,GAAnB,CAAuBC,KAAvB,CAA6B,YAA7B,EAA2C,CAA3C;AALM,OAAf;;AAQA,UAAG,OAAOf,KAAK,CAACK,GAAD,CAAZ,KAAsB,WAAzB,EAAsC;AAClCL,QAAAA,KAAK,CAACK,GAAD,CAAL,GAAa,EAAb;AACAL,QAAAA,KAAK,CAACK,GAAD,CAAL,CAAWY,IAAX,CAAgBT,MAAhB;AACH,OAHD,MAGO;AACHR,QAAAA,KAAK,CAACK,GAAD,CAAL,CAAWY,IAAX,CAAgBT,MAAhB;AACH;AACJ,KAhBD;AAkBA,WAAOR,KAAP;AACH,GAxBmB,CAApB;AA0BAkB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,WAAW,CAAC,UAAD,CAAvB;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,WAAW,EAAEA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,WAAW,CAACF,UAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CArCD;;GAAMF,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport Generations from './Generations'\nimport MoveList from './MoveList'\n\nconst Moves = ({ MoveList }) => {\n    const [ generation, setGeneration ] = useState('sun-moon')\n\n    const generations = props.moves.reduce((total, currentValue) => {\n        if(typeof total !== 'object'){\n            total = {}\n        }\n\n        currentValue.version_group_details.forEach(move => {\n            const key = move.version_group.name\n            const newObj = {\n                move: currentValue.move.name,\n                level: move.level_learned_at,\n                method: move.move_learn_method.name,\n                mId: move.move_learn_method.url.match(/\\/[0-9]+\\//)[0],\n                vId: move.version_group.url.match(/\\/[0-9]+\\//)[0]\n            }\n\n            if(typeof total[key] === 'undefined') {\n                total[key] = []\n                total[key].push(newObj)\n            } else {\n                total[key].push(newObj)\n            }\n        })\n\n        return total\n    })\n\n    console.log(generations['sun-moon'])\n\n    return (\n        <div>\n            <Generations generations={generations} />\n            <MoveList moveList={generations[generation]}/>\n        </div>\n    )\n}\n\nexport default Moves"]},"metadata":{},"sourceType":"module"}