{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokemon/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\n\nvar Pokemon = function Pokemon() {\n  _s();\n\n  var _useState = useState(undefined),\n      pokemon = _useState[0],\n      setPokemon = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var router = useRouter();\n  var name = router.query.id;\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios(\"https://pokeapi.co/api/v2/pokemon/\".concat(name));\n\n            case 2:\n              result = _context.sent;\n              setPokemon(result.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (name) {\n      fetchData();\n    }\n  }, [pokemon]);\n  console.log({\n    pokemon: pokemon,\n    name: name\n  });\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Pokemon\");\n};\n\n_s(Pokemon, \"LmHz4EuuxNKWeZXrfzUhPGUEGR4=\", false, function () {\n  return [useRouter];\n});\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["/Users/karyma/Desktop/Github/Pokemondb/src/pages/pokemon/[id].tsx"],"names":["React","useState","useEffect","useRouter","axios","Pokemon","undefined","pokemon","setPokemon","loading","setLoading","router","name","query","id","fetchData","result","data","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACYJ,QAAQ,CAACK,SAAD,CADpB;AAAA,MACXC,OADW;AAAA,MACFC,UADE;;AAAA,mBAEYP,QAAQ,CAAC,IAAD,CAFpB;AAAA,MAEXQ,OAFW;AAAA,MAEFC,UAFE;;AAIlB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAMS,IAAI,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAA1B;;AAEA,MAAMC,SAAS;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWX,KAAK,6CAAsCQ,IAAtC,EADhB;;AAAA;AACJI,cAAAA,MADI;AAEVR,cAAAA,UAAU,CAACQ,MAAM,CAACC,IAAR,CAAV;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATF,SAAS;AAAA;AAAA;AAAA,KAAf;;AAKAb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGU,IAAH,EAAQ;AACJG,MAAAA,SAAS;AACZ;AACJ,GAJQ,EAIN,CAACR,OAAD,CAJM,CAAT;AAMAW,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACZ,IAAAA,OAAO,EAAPA,OAAD;AAAUK,IAAAA,IAAI,EAAJA;AAAV,GAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH,CAvBD;;GAAMP,O;UAIaF,S;;;KAJbE,O;AAyBN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport axios from 'axios'\n\nconst Pokemon = () => {\n    const [pokemon, setPokemon] = useState(undefined)\n    const [loading, setLoading] = useState(true)\n\n    const router = useRouter()\n    const name = router.query.id\n\n    const fetchData = async () => {\n            const result = await axios(`https://pokeapi.co/api/v2/pokemon/${name}`)\n            setPokemon(result.data)\n    }\n\n    useEffect(() => {\n        if(name){\n            fetchData()\n        }\n    }, [pokemon])\n\n    console.log({pokemon, name})\n\n    return (\n        <h1>Pokemon</h1>\n    )\n}\n\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}